@page "/camera"

@inject HttpClient _httpClient
@inject IJSRuntime JsRuntime

<PageTitle>Camera</PageTitle>


<!-- Sản phẩm-->
<div class="row">
    <div class="col-11 offset-1 mt-2">
        <div class="row">
            <div class="col-10 offset-1">
                <div class="row">
                    <button type="button" class="col-2 btn btn-outline-primary border-3 m-1" onclick="filter_flashsale()">Bán Chạy</button>
                    <button type="button" class="col-2 btn btn-outline-primary border-3 m-1" onclick="filter_new()">Mới Nhất</button>
                    <button type="button" class="col-2 btn btn-outline-primary border-3 m-1" onclick="filter_up()">Giá Tăng Dần</button>
                    <button type="button" class="col-2 btn btn-outline-primary border-3 m-1" onclick="filter_down()">Giá Giảm Dần</button>
                    <select id="cameramenu" class="col-2 form-select btn-outline-primary border-3 m-1" onchange="" style="width:16.6%">
                       <option value="camera">Thương Hiệu</option>
                        
                    </select>
                </div>

            </div>
        </div>

    </div>
    <div class="col-12 mt-5">
        <div class="row">
            @if(productCameraList != null)
            {
                @for(int i = (@pagenum-1)*18; i<@pagenum*18;i++){
                    @if(i > (productCameraList.Count - 1))
                    {
                        break;
                    }
                    int index = i;
                <div class="col-4" >
                <div class="row product m-2">
                    <img class="col-12 product-img" src="../img-sanpham/@imgList[i]" alt="Canon" height="300px">
                    <div class="col-12 product-info">
                        <p class="text-dark fw-bold xuongdong" >@productCameraList[i].name</p>
                        <p class="text-black">@productCameraList[i].price</p>
                    </div>
                    <div class="product-action col-12" @onmouseover="(e) => ProductImg(1,index)"
                         @onmouseout="@(e => ProductImg(0,index))">
                        <div class="h-50"></div>
                        <div class="row h-25 p-5">
                            <a type="button" href="/detail/@productCameraList[i].id"data-toggle="tooltip" data-placement="top" title="Chi tiết"
                               class="btn btn-success col-3 offset-1" style="margin-right:10px">
                                <i class="bi bi-search"></i>
                            </a>
                            <a type="button" data-toggle="tooltip" data-placement="top" title="Thêm vào giỏ hàng"
                               class="btn btn-success col-3" @onclick="@(e => Buy(0))" style="margin-right:10px">
                                <i class="bi bi-basket"></i>
                            </a>
                            <a type="button" data-toggle="tooltip" data-placement="top" title="Mua ngay"
                               class="btn btn-success col-3" @onclick="@(e => BuyNow(0))" style="margin-right:10px">
                                <i class="bi bi-cart3"></i>
                            </a>
                        </div>

                    </div>
                </div>
            </div>
            }
            }
            
        </div>
    </div>
</div>
<div class="pagination justify-content-center mb-2">
    @for(int i =0; i< @totalPage; i++){
        int index = i;
        <a id="page-@i" class="page-item btn btn-outline-dark @activeClass[i]"
        @onclick="@(e => PageCurrent(index+1))" value="@(i+1)">@(i+1)</a>
    }
</div>



@code {
    List<string> imgList = new List<string>();
    List<string> activeClass = new List<string>();
    List<BrandViewModel> brands = new List<BrandViewModel>();
    int pagenum = 1;
    int totalPage = 0;
    List<ProductViewModel> productList = new List<ProductViewModel>();
    List<ProductViewModel> productCameraList = new List<ProductViewModel>();


    protected override async Task OnInitializedAsync()
    {
        var response = await _httpClient.GetAsync("api/product");
        //var response_Brand = await _httpClient.GetAsync("api/brand");
        response.EnsureSuccessStatusCode();
        //response_Brand.EnsureSuccessStatusCode();
        productList = await response.Content.ReadFromJsonAsync<List<ProductViewModel>>();
        //brands = await response_Brand.Content.ReadFromJsonAsync<List<BrandViewModel>>();
        foreach(var product in productList)
        {
            if(product.idCategory == 1)
            {
                productCameraList.Add(product);
                imgList.Add(product.img1);
            }
        }
        double total = productCameraList.Count / 18.0;
        totalPage = (int)Math.Ceiling(total);
        for (int i= 0; i <totalPage; i++)
        {
            activeClass.Add("");
        }
        activeClass[0] = "active";
    }

    string ngune = "";
    public void ProductImg(int position, int index)
    {
        if (position == 1)
        {
            imgList[index] = productCameraList[index].img2;

        }
        else
        {
            imgList[index] = productCameraList[index].img1;
        }
    }

    public async void PageCurrent(int index)
    {
        pagenum = index;
        for (int i= 0; i <totalPage; i++)
        {
            activeClass[i] = "";
        }
        activeClass[index - 1] = "active";
        await JsRuntime.InvokeVoidAsync("ScrollToTop");
    }

    public void Buy(int index)
    {

    }

    public void BuyNow(int index)
    {

    }

}